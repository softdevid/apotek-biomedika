package frames;

import config.MySQLConnection;
import config.TableColumnAdjuster;
import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.NumberFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Locale;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ZAFL
 */
public class Pembelian extends javax.swing.JInternalFrame {

  Connection conn = (Connection) MySQLConnection.connectDB();
  DefaultTableModel model;
  Date date = new Date();
  SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
  String distributorId, barangId;
  NumberFormat kurensiIndonesia = NumberFormat.getCurrencyInstance(new Locale("in", "ID"));
  ArrayList<String> dataUpdate = new ArrayList<>(); // baris, status, dataBarang_id

  /**
   * Creates new form Pembelian
   */
  public Pembelian() {
    initComponents();
    ((BasicInternalFrameUI) this.getUI()).setNorthPane(null);
    ((BasicInternalFrameUI) this.getUI()).setEastPane(null);
    ((BasicInternalFrameUI) this.getUI()).setSouthPane(null);
    ((BasicInternalFrameUI) this.getUI()).setWestPane(null);
    this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
//    this.getContentPane().setBackground(Color.decode("#FFFFFF"));

    getNomorFaktur();
    getDistributor();
    totalHarga.setText(kurensiIndonesia.format(Double.parseDouble("0")));
    loadTabelPembelianDetail();
    totalHarga();
    if (model.getRowCount() > 0) {
      enableTxtFieldPblDtl();
    }
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jPopupMenu = new javax.swing.JPopupMenu();
    menuEdit = new javax.swing.JMenuItem();
    menuHapus = new javax.swing.JMenuItem();
    jPanel1 = new javax.swing.JPanel();
    cmbBxDistributor = new javax.swing.JComboBox<>();
    jLabel1 = new javax.swing.JLabel();
    jDateTglTerima = new com.toedter.calendar.JDateChooser();
    jLabel2 = new javax.swing.JLabel();
    jLabel3 = new javax.swing.JLabel();
    txtNoFaktur = new javax.swing.JTextField();
    jDateTglFaktur = new com.toedter.calendar.JDateChooser();
    jLabel4 = new javax.swing.JLabel();
    jLabel5 = new javax.swing.JLabel();
    jDateJtuhTmpo = new com.toedter.calendar.JDateChooser();
    jLabel6 = new javax.swing.JLabel();
    jScrollPane1 = new javax.swing.JScrollPane();
    txtKet = new javax.swing.JTextArea();
    btnLnjut = new javax.swing.JButton();
    jPanel2 = new javax.swing.JPanel();
    totalHarga = new javax.swing.JLabel();
    jPanel3 = new javax.swing.JPanel();
    jLabel8 = new javax.swing.JLabel();
    txtNama = new javax.swing.JTextField();
    jLabel9 = new javax.swing.JLabel();
    txtQty = new javax.swing.JTextField();
    jLabel10 = new javax.swing.JLabel();
    txtHrgStuan = new javax.swing.JFormattedTextField(NumberFormat.getInstance(Locale.GERMANY));
    jLabel11 = new javax.swing.JLabel();
    txtHrgJual = new javax.swing.JFormattedTextField(NumberFormat.getInstance(Locale.GERMANY));
    txtBatch = new javax.swing.JTextField();
    jLabel12 = new javax.swing.JLabel();
    jDateTglKdlwrs = new com.toedter.calendar.JDateChooser();
    jLabel13 = new javax.swing.JLabel();
    btnTmbhBrg = new javax.swing.JButton();
    jScrollPane2 = new javax.swing.JScrollPane();
    tableBarang = new javax.swing.JTable() {
      public boolean isCellEditable(int row, int column) {
        return false;
      };
    };
    jPanel4 = new javax.swing.JPanel();
    jLabel14 = new javax.swing.JLabel();
    jLabel15 = new javax.swing.JLabel();
    btnCariBarang = new javax.swing.JButton();
    btnSelesai = new javax.swing.JButton();
    txtBayar = new javax.swing.JFormattedTextField(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0"))));
    txtKembali = new javax.swing.JFormattedTextField();

    menuEdit.setText("Edit");
    menuEdit.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        menuEditActionPerformed(evt);
      }
    });
    jPopupMenu.add(menuEdit);

    menuHapus.setText("Hapus");
    menuHapus.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        menuHapusActionPerformed(evt);
      }
    });
    jPopupMenu.add(menuHapus);

    setBorder(null);
    setForeground(null);
    setFrameIcon(null);
    setMinimumSize(new java.awt.Dimension(960, 540));
    setOpaque(true);
    setPreferredSize(new java.awt.Dimension(1270, 720));

    jPanel1.setBackground(new java.awt.Color(208, 242, 255));

    cmbBxDistributor.addItemListener(new java.awt.event.ItemListener() {
      public void itemStateChanged(java.awt.event.ItemEvent evt) {
        cmbBxDistributorItemStateChanged(evt);
      }
    });

    jLabel1.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
    jLabel1.setText("Tanggal Terima");

    jDateTglTerima.setDate(date);

    jLabel2.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
    jLabel2.setText("PBF Distributor");

    jLabel3.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
    jLabel3.setText("No Faktur");

    jDateTglFaktur.setDate(date);

    jLabel4.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
    jLabel4.setText("Tanggal Faktur");

    jLabel5.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
    jLabel5.setText("Jatuh Tempo");

    jDateJtuhTmpo.setDate(date);

    jLabel6.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
    jLabel6.setText("Keterangan");

    txtKet.setColumns(20);
    txtKet.setRows(5);
    txtKet.setText("-");
    jScrollPane1.setViewportView(txtKet);

    btnLnjut.setText("Lanjut");
    btnLnjut.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnLnjutActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel1Layout.createSequentialGroup()
        .addGap(25, 25, 25)
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jLabel1)
          .addComponent(jLabel2)
          .addComponent(jLabel3)
          .addComponent(jLabel4))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
          .addComponent(cmbBxDistributor, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(jDateTglTerima, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
          .addComponent(txtNoFaktur)
          .addComponent(jDateTglFaktur, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addGap(25, 25, 25)
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jLabel5)
          .addComponent(jLabel6))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jDateJtuhTmpo, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addGroup(jPanel1Layout.createSequentialGroup()
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addComponent(btnLnjut)))
        .addContainerGap(54, Short.MAX_VALUE))
    );
    jPanel1Layout.setVerticalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel1Layout.createSequentialGroup()
        .addGap(20, 20, 20)
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jLabel1)
          .addComponent(jDateTglTerima, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jLabel5)
          .addComponent(jDateJtuhTmpo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(jPanel1Layout.createSequentialGroup()
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(jLabel2)
              .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(cmbBxDistributor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel6)))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(jLabel3)
              .addComponent(txtNoFaktur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addGroup(jPanel1Layout.createSequentialGroup()
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jDateTglFaktur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
              .addGroup(jPanel1Layout.createSequentialGroup()
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
          .addGroup(jPanel1Layout.createSequentialGroup()
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
              .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addComponent(btnLnjut, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(0, 0, Short.MAX_VALUE))))
    );

    jPanel2.setBackground(new java.awt.Color(208, 242, 255));

    totalHarga.setFont(new java.awt.Font("Roboto", 0, 48)); // NOI18N
    totalHarga.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
    totalHarga.setText("0");

    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
    jPanel2.setLayout(jPanel2Layout);
    jPanel2Layout.setHorizontalGroup(
      jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel2Layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(totalHarga, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addContainerGap())
    );
    jPanel2Layout.setVerticalGroup(
      jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel2Layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(totalHarga, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addContainerGap())
    );

    jPanel3.setBackground(new java.awt.Color(208, 242, 255));

    jLabel8.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
    jLabel8.setText("Nama");

    txtNama.setEnabled(false);

    jLabel9.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
    jLabel9.setText("Qty");

    txtQty.setEnabled(false);
    txtQty.setPreferredSize(new java.awt.Dimension(80, 22));

    jLabel10.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
    jLabel10.setText("Harga Satuan");

    txtHrgStuan.setEnabled(false);

    jLabel11.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
    jLabel11.setText("Harga Jual");

    txtHrgJual.setEnabled(false);

    txtBatch.setEnabled(false);

    jLabel12.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
    jLabel12.setText("Batch");

    jDateTglKdlwrs.setBackground(new java.awt.Color(255, 255, 255));
    jDateTglKdlwrs.setDateFormatString("dd MMM yyyy");
    jDateTglKdlwrs.setDate(date);

    jLabel13.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
    jLabel13.setText("Tanggal Kedaluwarsa");

    btnTmbhBrg.setText("Tambah");
    btnTmbhBrg.setEnabled(false);
    btnTmbhBrg.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnTmbhBrgActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
    jPanel3.setLayout(jPanel3Layout);
    jPanel3Layout.setHorizontalGroup(
      jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel3Layout.createSequentialGroup()
        .addGap(25, 25, 25)
        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(txtNama, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jLabel8))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jLabel12)
          .addComponent(txtBatch, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(txtQty, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jLabel9))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jLabel10)
          .addComponent(txtHrgStuan, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(jPanel3Layout.createSequentialGroup()
            .addComponent(jLabel11)
            .addGap(81, 81, 81))
          .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
            .addComponent(txtHrgJual, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)))
        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jLabel13)
          .addGroup(jPanel3Layout.createSequentialGroup()
            .addComponent(jDateTglKdlwrs, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(29, 29, 29)
            .addComponent(btnTmbhBrg)))
        .addContainerGap(363, Short.MAX_VALUE))
    );
    jPanel3Layout.setVerticalGroup(
      jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel3Layout.createSequentialGroup()
        .addGap(10, 10, 10)
        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
          .addGroup(jPanel3Layout.createSequentialGroup()
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
              .addComponent(jLabel8)
              .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel10)
                .addComponent(jLabel11)
                .addComponent(jLabel9))
              .addComponent(jLabel12))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
              .addComponent(txtNama, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addComponent(txtQty, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addComponent(txtBatch, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addComponent(txtHrgStuan, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addComponent(txtHrgJual, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
          .addGroup(jPanel3Layout.createSequentialGroup()
            .addComponent(jLabel13)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(jDateTglKdlwrs, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addComponent(btnTmbhBrg, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
        .addGap(10, 10, 10))
    );

    jScrollPane2.setBackground(new java.awt.Color(255, 255, 255));

    tableBarang.setModel(new javax.swing.table.DefaultTableModel(
      new Object [][] {
        {null, null, null, null},
        {null, null, null, null},
        {null, null, null, null},
        {null, null, null, null}
      },
      new String [] {
        "Title 1", "Title 2", "Title 3", "Title 4"
      }
    ));
    tableBarang.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseReleased(java.awt.event.MouseEvent evt) {
        tableBarangMouseReleased(evt);
      }
    });
    jScrollPane2.setViewportView(tableBarang);

    jPanel4.setBackground(new java.awt.Color(208, 242, 255));

    jLabel14.setFont(new java.awt.Font("Roboto Medium", 0, 24)); // NOI18N
    jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
    jLabel14.setText("BAYAR");

    jLabel15.setFont(new java.awt.Font("Roboto Medium", 0, 24)); // NOI18N
    jLabel15.setText("KEMBALI");

    btnCariBarang.setText("Cari Barang");

    btnSelesai.setText("Selesai");

    txtBayar.addCaretListener(new javax.swing.event.CaretListener() {
      public void caretUpdate(javax.swing.event.CaretEvent evt) {
        txtBayarCaretUpdate(evt);
      }
    });
    txtBayar.addFocusListener(new java.awt.event.FocusAdapter() {
      public void focusGained(java.awt.event.FocusEvent evt) {
        txtBayarFocusGained(evt);
      }
    });
    txtBayar.addKeyListener(new java.awt.event.KeyAdapter() {
      public void keyPressed(java.awt.event.KeyEvent evt) {
        txtBayarKeyPressed(evt);
      }
      public void keyReleased(java.awt.event.KeyEvent evt) {
        txtBayarKeyReleased(evt);
      }
    });

    txtKembali.setEditable(false);

    javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
    jPanel4.setLayout(jPanel4Layout);
    jPanel4Layout.setHorizontalGroup(
      jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
        .addGap(29, 29, 29)
        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
          .addComponent(btnCariBarang, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
          .addComponent(btnSelesai, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING)
          .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.TRAILING))
        .addGap(26, 26, 26)
        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
          .addComponent(txtBayar)
          .addComponent(txtKembali, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addGap(40, 40, 40))
    );
    jPanel4Layout.setVerticalGroup(
      jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel4Layout.createSequentialGroup()
        .addContainerGap(28, Short.MAX_VALUE)
        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(jPanel4Layout.createSequentialGroup()
            .addComponent(btnCariBarang, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addComponent(btnSelesai, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(0, 0, Short.MAX_VALUE))
          .addGroup(jPanel4Layout.createSequentialGroup()
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
              .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jLabel15))
              .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(txtBayar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtKembali, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addContainerGap(26, Short.MAX_VALUE))))
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addGroup(layout.createSequentialGroup()
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
          .addComponent(jScrollPane2)
          .addGroup(layout.createSequentialGroup()
            .addGap(6, 6, 6)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        .addContainerGap())
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
          .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addContainerGap())
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void btnTmbhBrgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTmbhBrgActionPerformed
    String noFaktur = txtNoFaktur.getText();
    String nama = txtNama.getText();
    String batch = txtBatch.getText();
    String qty = txtQty.getText();
    String hrgStuan = txtHrgStuan.getText().replace(".", "");
    String hrgJual = txtHrgJual.getText().replace(".", "");
    String tglKdlwrs = sdf.format(jDateTglKdlwrs.getDate());

    try {
      PreparedStatement ps;
      if (!dataUpdate.isEmpty() && dataUpdate.get(1).equals("onUpdate")) {
        String query = "UPDATE `data_barang` SET "
                + "`nama_barang`='" + nama + "',"
                + "`batch`='" + batch + "',"
                + "`tanggal_kedaluwarsa`='" + tglKdlwrs + "',"
                + "`harga_satuan`='" + hrgStuan + "',"
                + "`harga_jual`='" + hrgJual + "',"
                + "`qty`='" + qty + "' "
                + "WHERE `id`='" + dataUpdate.get(2) + "'";
        ps = (PreparedStatement) conn.prepareStatement(query);
        ps.executeUpdate();
      } else {
        Statement stm = conn.createStatement();
        String queryCekBarang = "SELECT `id`, `nama_barang`, `batch`, `qty` FROM `data_barang` WHERE `nama_barang` LIKE '%" + nama + "%' AND `batch` LIKE '%" + batch + "%'";
        ResultSet rs = stm.executeQuery(queryCekBarang);
        if (rs.next()) {
          String query = "UPDATE `data_barang` SET `qty`='" + Integer.valueOf(rs.getString("qty")) + Integer.valueOf(qty) + "' WHERE `id`='" + rs.getString("id") + "'";
          ps = (PreparedStatement) conn.prepareStatement(query);
          ps.executeUpdate();
        } else {
          String queryDataBarang = "INSERT INTO `data_barang`(`nama_barang`, `batch`, `tanggal_kedaluwarsa`, `harga_satuan`, `harga_jual`, `qty`)"
                  + " VALUES ('" + nama + "','" + batch + "','" + tglKdlwrs + "','" + hrgStuan + "','" + hrgJual + "','" + qty + "')";
          ps = (PreparedStatement) conn.prepareStatement(queryDataBarang);
          ps.executeUpdate();

          barangId = getBarangId();

          String queryPembelianDetail = "INSERT INTO `pembelian_detail`(`no_faktur`, `barang_id`, `qty`, `harga_total`) "
                  + "VALUES ('" + noFaktur + "','" + barangId + "', '" + qty + "', '" + (Integer.parseInt(qty) * Integer.parseInt(hrgStuan)) + "')";
          ps = (PreparedStatement) conn.prepareStatement(queryPembelianDetail);
          ps.executeUpdate();
        }
      }

    } catch (SQLException ex) {
      System.err.println("Error" + ex.getMessage());
    }
    loadTabelPembelianDetail();
    totalHarga();
    clearTxtFieldPblDtl();
  }//GEN-LAST:event_btnTmbhBrgActionPerformed

  private void btnLnjutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLnjutActionPerformed
    String tglTerima = sdf.format(jDateTglTerima.getDate());
    String noFaktur = txtNoFaktur.getText();
    String tglFaktur = sdf.format(jDateTglFaktur.getDate());
    String jtuhTmpo = sdf.format(jDateJtuhTmpo.getDate());
    String keterangan = txtKet.getText();

    if (tglTerima.isEmpty()) {
      JOptionPane.showMessageDialog(this, "Pilih tanggal terima");
    } else if (cmbBxDistributor.getSelectedIndex() == 0 && distributorId == null) {
      JOptionPane.showMessageDialog(this, "Pilih Distributor");
    } else if (noFaktur.isEmpty()) {
      JOptionPane.showMessageDialog(this, "Masukkan No Faktur");
    } else if (tglFaktur.isEmpty()) {
      JOptionPane.showMessageDialog(this, "Pilih tanggal faktur");
    } else if (jtuhTmpo.isEmpty()) {
      JOptionPane.showMessageDialog(this, "Pilih tanggal untuk jatuh tempo");
    } else if (keterangan.isEmpty()) {
      JOptionPane.showMessageDialog(this, "Masukkan keterangan");
    } else {
      enableTxtFieldPblDtl();
      btnLnjut.setEnabled(false);
      txtNama.requestFocus();
    }
  }//GEN-LAST:event_btnLnjutActionPerformed

  private void cmbBxDistributorItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbBxDistributorItemStateChanged
    try {
      if (cmbBxDistributor.getSelectedIndex() != 0) {
        String namaDistributor = cmbBxDistributor.getSelectedItem().toString();
        String query = "SELECT `id` FROM `pbf_distributor` WHERE `nama`='" + namaDistributor + "'";

        try {
          Statement stm = conn.createStatement();
          ResultSet rs = stm.executeQuery(query);

          if (rs.next()) {
            distributorId = rs.getString("id");
          }
        } catch (SQLException e) {
          System.out.println(e.getMessage());
          e.printStackTrace();
        }
      }
    } catch (HeadlessException e) {
      System.out.println(e.getMessage());
      e.printStackTrace();
    }
  }//GEN-LAST:event_cmbBxDistributorItemStateChanged

  private void tableBarangMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableBarangMouseReleased
    if (evt.isPopupTrigger()) {
      JTable source = (JTable) evt.getSource();
      int row = source.rowAtPoint(evt.getPoint());
      int column = source.columnAtPoint(evt.getPoint());

      if (!source.isRowSelected(row)) {
        source.changeSelection(row, column, false, false);
      }
      jPopupMenu.show(evt.getComponent(), evt.getX(), evt.getY());
    }
  }//GEN-LAST:event_tableBarangMouseReleased

  private void menuEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuEditActionPerformed
    if (tableBarang.getSelectedRow() != -1) {
      int baris = tableBarang.getSelectedRow();
      dataUpdate.add(String.valueOf(baris)); // baris
      dataUpdate.add("onUpdate"); // status
      dataUpdate.add(tableBarang.getValueAt(baris, 2).toString()); // data_barang_id

      txtNama.setText(tableBarang.getValueAt(baris, 3).toString());
      txtBatch.setText(tableBarang.getValueAt(baris, 4).toString());
      txtQty.setText(tableBarang.getValueAt(baris, 8).toString());
      txtHrgStuan.setText(tableBarang.getValueAt(baris, 6).toString());
      txtHrgJual.setText(tableBarang.getValueAt(baris, 7).toString());

      SimpleDateFormat inputFormat = new SimpleDateFormat("yyyy-MM-dd");
      try {
        Date dateTable = inputFormat.parse(tableBarang.getValueAt(baris, 5).toString());
        SimpleDateFormat outputFormat = new SimpleDateFormat("dd MMM yyyy");
        String formattedDate = outputFormat.format(dateTable);

        jDateTglKdlwrs.setDate(outputFormat.parse(formattedDate));
      } catch (ParseException e) {
        System.out.println(e.getMessage());
        e.printStackTrace();
      }
    }
  }//GEN-LAST:event_menuEditActionPerformed

  private void menuHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuHapusActionPerformed
    if (tableBarang.getSelectedRow() != -1) {
      String idBarang = tableBarang.getValueAt(tableBarang.getSelectedRow(), 2).toString();
      String idPembelianDetail = tableBarang.getValueAt(tableBarang.getSelectedRow(), 1).toString();
      String qty = tableBarang.getValueAt(tableBarang.getSelectedRow(), 8).toString();
      try {
        PreparedStatement ps;
        Statement stm = conn.createStatement();
        ResultSet res = stm.executeQuery("SELECT `qty` FROM `data_barang` WHERE `id`='" + idBarang + "'");
        if (res.next()) {
          String queryDelete = "DELETE FROM `pembelian_detail` WHERE `id`='" + idPembelianDetail + "'";
          ps = (PreparedStatement) conn.prepareStatement(queryDelete);
          ps.executeUpdate();

          String queryUpdate = "UPDATE `data_barang` SET `qty`='" + (Integer.valueOf(res.getString("qty")) - Integer.valueOf(qty)) + "' WHERE `id`='" + idBarang + "'";
          ps = (PreparedStatement) conn.prepareStatement(queryUpdate);
          ps.executeUpdate();

          loadTabelPembelianDetail();
          totalHarga();
        }
      } catch (SQLException e) {
//        JOptionPane.showMessageDialog(null, "Error saat menghapus data");
        System.out.println(e.getMessage());
        e.printStackTrace();
      }
    }
  }//GEN-LAST:event_menuHapusActionPerformed

  private void txtBayarFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtBayarFocusGained
    txtBayar.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0"))));
  }//GEN-LAST:event_txtBayarFocusGained

  private void txtBayarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBayarKeyPressed
    if (evt.getKeyCode() == KeyEvent.VK_ENTER && !txtBayar.getText().isEmpty()) {
      String tglTerima = sdf.format(jDateTglTerima.getDate());
      String noFaktur = txtNoFaktur.getText();
      String tglFaktur = sdf.format(jDateTglFaktur.getDate());
      String jtuhTmpo = sdf.format(jDateJtuhTmpo.getDate());
      String keterangan = txtKet.getText();

      if (tglTerima.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Pilih tanggal terima");
      } else if (cmbBxDistributor.getSelectedIndex() == 0 && distributorId == null) {
        JOptionPane.showMessageDialog(this, "Pilih Distributor");
      } else if (noFaktur.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Masukkan No Faktur");
      } else if (tglFaktur.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Pilih tanggal faktur");
      } else if (jtuhTmpo.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Pilih tanggal untuk jatuh tempo");
      } else if (keterangan.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Masukkan keterangan");
      } else {
        try {
          double bayar = Double.parseDouble(txtBayar.getText().replace(".", ""));
          double kembali = parseRupiah(txtKembali.getText());

          String query = "INSERT INTO `pembelian`(`tanggal_terima`, `pbf_id`, `no_faktur`, `tanggal_faktur`, `jatuh_tempo`, `bayar_total`, `bayar_kembalian`, `keterangan`) "
                  + "VALUES ('" + tglTerima + "','" + distributorId + "','" + noFaktur + "','" + tglFaktur + "','" + jtuhTmpo + "','" + bayar + "','" + kembali + "','" + kembali + "')";
          PreparedStatement ps = (PreparedStatement) conn.prepareStatement(query);
          ps.executeUpdate();

          jDateTglTerima.setDate(date);
          cmbBxDistributor.setSelectedIndex(0);
          getNomorFaktur();
          jDateTglFaktur.setDate(date);
          jDateJtuhTmpo.setDate(date);
          txtKet.setText("-");
          btnLnjut.setEnabled(true);
          clearTxtFieldPblDtl();
          totalHarga.setText(kurensiIndonesia.format(Double.parseDouble("0")));
          loadTabelPembelianDetail();
        } catch (SQLException e) {
          System.out.println(e.getMessage());
          e.printStackTrace();
        }
      }
    }
  }//GEN-LAST:event_txtBayarKeyPressed

  private void txtBayarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBayarKeyReleased
    if (txtBayar.getText().length() >= 1) {
      String text = txtBayar.getText().replace(",", "").replace(".", "");

      try {
        long number = Long.parseLong(text);
        String formattedText = String.format("%,d", number);
        txtBayar.setText(formattedText);
        int newCaretPosition = formattedText.length();
        txtBayar.setCaretPosition(newCaretPosition);
      } catch (NumberFormatException e) {
        System.out.println(e.getMessage());
        e.printStackTrace();
      }
    } else {
      txtBayar.setText("0");
    }
  }//GEN-LAST:event_txtBayarKeyReleased

  private void txtBayarCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtBayarCaretUpdate
    if (txtBayar.getText().length() != 0) {
      double value = 0;
      String total = totalHarga.getText();

      try {
        Number parsedNumber = kurensiIndonesia.parse(total);
        value = parsedNumber.doubleValue();
      } catch (ParseException e) {
        System.out.println(e.getMessage());
        e.printStackTrace();
      }

      String bayar = txtBayar.getText().replace(".", "");
      double pembayaran = Double.parseDouble(bayar);
      System.out.println(pembayaran);

      if (!bayar.isEmpty()) {
        double kembalian = pembayaran - value;
        txtKembali.setText(kurensiIndonesia.format(kembalian));
      }
    }
  }//GEN-LAST:event_txtBayarCaretUpdate


  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton btnCariBarang;
  private javax.swing.JButton btnLnjut;
  private javax.swing.JButton btnSelesai;
  private javax.swing.JButton btnTmbhBrg;
  private javax.swing.JComboBox<String> cmbBxDistributor;
  private com.toedter.calendar.JDateChooser jDateJtuhTmpo;
  private com.toedter.calendar.JDateChooser jDateTglFaktur;
  private com.toedter.calendar.JDateChooser jDateTglKdlwrs;
  private com.toedter.calendar.JDateChooser jDateTglTerima;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel10;
  private javax.swing.JLabel jLabel11;
  private javax.swing.JLabel jLabel12;
  private javax.swing.JLabel jLabel13;
  private javax.swing.JLabel jLabel14;
  private javax.swing.JLabel jLabel15;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JLabel jLabel3;
  private javax.swing.JLabel jLabel4;
  private javax.swing.JLabel jLabel5;
  private javax.swing.JLabel jLabel6;
  private javax.swing.JLabel jLabel8;
  private javax.swing.JLabel jLabel9;
  private javax.swing.JPanel jPanel1;
  private javax.swing.JPanel jPanel2;
  private javax.swing.JPanel jPanel3;
  private javax.swing.JPanel jPanel4;
  private javax.swing.JPopupMenu jPopupMenu;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JScrollPane jScrollPane2;
  private javax.swing.JMenuItem menuEdit;
  private javax.swing.JMenuItem menuHapus;
  private javax.swing.JTable tableBarang;
  private javax.swing.JLabel totalHarga;
  private javax.swing.JTextField txtBatch;
  private javax.swing.JFormattedTextField txtBayar;
  private javax.swing.JFormattedTextField txtHrgJual;
  private javax.swing.JFormattedTextField txtHrgStuan;
  private javax.swing.JFormattedTextField txtKembali;
  private javax.swing.JTextArea txtKet;
  private javax.swing.JTextField txtNama;
  private javax.swing.JTextField txtNoFaktur;
  private javax.swing.JTextField txtQty;
  // End of variables declaration//GEN-END:variables

  private void getNomorFaktur() {
    SimpleDateFormat sdf2 = new SimpleDateFormat("yyyyMMdd");
    String tglSekarang = sdf2.format(date);

    String query = "SELECT `id` FROM `pembelian` ORDER BY `id` DESC";

    try {
      Statement stm = conn.createStatement();
      ResultSet rs = stm.executeQuery(query);

      if (rs.next()) {
        int no = Integer.parseInt(rs.getString("id")) + 1;
        txtNoFaktur.setText("PINV/" + tglSekarang + "/" + Integer.toString(no));
      } else {
        int no = 1;
        txtNoFaktur.setText("PINV/" + tglSekarang + "/" + Integer.toString(no));
      }
    } catch (NumberFormatException | SQLException e) {
      System.out.println(e.getMessage());
      e.printStackTrace();
    }
  }

  private void getDistributor() {
    cmbBxDistributor.removeAllItems();
    cmbBxDistributor.addItem("Pilih Distributor");

    String query = "SELECT `nama` FROM `pbf_distributor` ORDER BY `nama` ASC";
    try {
      Statement stm = conn.createStatement();
      ResultSet res = stm.executeQuery(query);
      while (res.next()) {
        cmbBxDistributor.addItem(res.getString("nama"));
      }
    } catch (SQLException e) {
      System.out.println(e.getMessage());
      e.printStackTrace();
    }
  }

  private void enableTxtFieldPblDtl() {
    txtNama.setEnabled(true);
    txtBatch.setEnabled(true);
    txtQty.setEnabled(true);
    txtHrgStuan.setEnabled(true);
    txtHrgJual.setEnabled(true);
    jDateTglKdlwrs.setEnabled(true);
    btnTmbhBrg.setEnabled(true);
  }

  private void clearTxtFieldPblDtl() {
    txtNama.setText("");
    txtBatch.setText("");
    txtQty.setText("");
    txtHrgStuan.setText("");
    txtHrgJual.setText("");
    jDateTglKdlwrs.setDate(date);
  }

  private void loadTabelPembelianDetail() {
    String noFaktur = txtNoFaktur.getText();

    model = new DefaultTableModel();
    model.addColumn("No");
    model.addColumn("ID");
    model.addColumn("ID Barang");
    model.addColumn("Nama Barang");
    model.addColumn("Batch");
    model.addColumn("Tanggal Kedaluwarsa");
    model.addColumn("Harga Satuan");
    model.addColumn("Harga Jual");
    model.addColumn("Qty");
    model.addColumn("Subtotal");

    try {
      int no = 1;
      String query = "SELECT pbldt.id, dtbrg.id AS barangID, dtbrg.nama_barang, dtbrg.batch, dtbrg.tanggal_kedaluwarsa, dtbrg.harga_satuan, dtbrg.harga_jual, dtbrg.qty, (dtbrg.harga_satuan * dtbrg.qty) AS harga_total "
              + "FROM pembelian_detail pbldt "
              + "JOIN data_barang dtbrg ON pbldt.barang_id = dtbrg.id "
              + "WHERE pbldt.no_faktur='" + noFaktur + "'";
      Statement stm = conn.createStatement();
      ResultSet res = stm.executeQuery(query);

      while (res.next()) {
        double hrgStuan = Double.parseDouble(res.getString("harga_satuan"));
        double hrgJual = Double.parseDouble(res.getString("harga_jual"));
        double hrgTotal = Double.parseDouble(res.getString("harga_total"));

        Object[] o = new Object[10];
        o[0] = no++;
        o[1] = res.getString("id");
        o[2] = res.getString("barangID");
        o[3] = res.getString("nama_barang");
        o[4] = res.getString("batch");
        o[5] = res.getString("tanggal_kedaluwarsa");
        o[6] = String.format("%,.2f", hrgStuan);
        o[7] = String.format("%,.2f", hrgJual);
        o[8] = res.getString("qty");
        o[9] = String.format("%,.2f", hrgTotal);

        model.addRow(o);
      }
      tableBarang.setModel(model);
      tableBarang.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
      tableBarang.getColumnModel().getColumn(1).setMinWidth(0);
      tableBarang.getColumnModel().getColumn(1).setMaxWidth(0);
      tableBarang.getColumnModel().getColumn(1).setWidth(0);
      tableBarang.getColumnModel().getColumn(2).setMinWidth(0);
      tableBarang.getColumnModel().getColumn(2).setMaxWidth(0);
      tableBarang.getColumnModel().getColumn(2).setWidth(0);

      TableColumnAdjuster tca = new TableColumnAdjuster(tableBarang);
      tca.adjustColumns();
    } catch (NumberFormatException | SQLException e) {
      System.out.println(e.getMessage());
      e.printStackTrace();
    }
  }

  private String getBarangId() throws SQLException {
    String querySelect = "SELECT `id` FROM `data_barang` ORDER BY `id` DESC LIMIT 1";
    Statement stm = conn.createStatement();
    ResultSet res = stm.executeQuery(querySelect);
    while (res.next()) {
      barangId = res.getString("id");
    }
    return barangId;
  }

//  private String getPembelianId() throws SQLException {
//    String querySelect = "SELECT `id` FROM `pembelian` ORDER BY `id` DESC LIMIT 1";
//    Statement stm = conn.createStatement();
//    ResultSet res = stm.executeQuery(querySelect);
//    while (res.next()) {
//      pembelianId = res.getString("id");
//    }
//    return pembelianId;
//  }
  private void totalHarga() {
    String noFaktur = txtNoFaktur.getText();
    String query = "SELECT IFNULL(SUM(harga_total), 0) AS total FROM pembelian_detail WHERE no_faktur='" + noFaktur + "'";

    try {
      Statement stm = conn.createStatement();
      ResultSet res = stm.executeQuery(query);

      if (res.next()) {
        totalHarga.setText(kurensiIndonesia.format(Double.parseDouble(res.getString("total"))));
      }
    } catch (NumberFormatException | SQLException e) {
      System.out.println(e.getMessage());
      e.printStackTrace();
    }
  }

  private double parseRupiah(String text) {
    double kembali = 0;
    try {
      Number parsedNumber = kurensiIndonesia.parse(text);
      kembali = parsedNumber.doubleValue();
    } catch (ParseException e) {
      System.out.println(e.getMessage());
      e.printStackTrace();
    }
    return kembali;
  }
}
